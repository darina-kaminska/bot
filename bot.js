const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');

const token = '8186553250:AAEHCZd02dG6dNjQDUNMrRq9ohaNbdezg7A';
const bot = new TelegramBot(token, { polling: true });

let users = {};
try {
  users = JSON.parse(fs.readFileSync('users.json', 'utf8'));
} catch (e) {
  users = {};
}

function saveUsers() {
  fs.writeFileSync('users.json', JSON.stringify(users, null, 2));
}

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendMessage(chatId, 'üëã –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ 1win –ø–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ?', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '‚úÖ –î–∞, —è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è', callback_data: 'registered' }],
        [{ text: '‚ùå –ù–µ—Ç, —è –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è', callback_data: 'not_registered' }],
      ]
    }
  });
});

bot.on('callback_query', (query) => {
  const chatId = query.message.chat.id;
  const data = query.data;

  if (data === 'not_registered') {
    const refLink = `https://1win.com/?open=register&partner=123456&subid=${chatId}`;
    users[chatId] = { confirmed: false };
    bot.sendMessage(chatId, `üîó –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –ø–æ —Å—Å—ã–ª–∫–µ: \n${refLink}\n\n–ö–∞–∫ —Ç–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—à—å—Å—è, —è —ç—Ç–æ —É–≤–∏–∂—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ üòâ`);
  }

  if (data === 'registered') {
    if (users[chatId]?.confirmed) {
      bot.sendMessage(chatId, '‚úÖ –¢—ã —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω! –ì–æ—Ç–æ–≤ –ø–æ–ª—É—á–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã!');
    } else {
      bot.sendMessage(chatId, 'üîÑ –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–≤–æ—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å—Å—ã–ª–∫–µ. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 1‚Äì2 –º–∏–Ω—É—Ç—ã.');
    }
  }

  saveUsers();
  bot.answerCallbackQuery(query.id);
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
module.exports = { bot, users, saveUsers };
